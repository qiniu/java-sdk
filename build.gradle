import java.util.regex.Matcher

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

jacocoTestReport {
     reports {
         xml.enabled true
         html.enabled false
     }
 }

dependencies {
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    testImplementation group: 'com.qiniu', name: 'happy-dns-java', version: '0.1.6'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}


task getHomeDir {
    doLast {
        println gradle.gradleHomeDir
    }
}

apply plugin: 'checkstyle'


def versionName() {
    String config = 'src/main/java/com/qiniu/common/Constants.java'
    String fileContents = new File(config).text
    Matcher myMatcher = fileContents =~ /VERSION = "(.+)";/
    String version = myMatcher[0][1]
    println(version)
    return version
}

static def versionNameToCode(String version) {
    String v = version.replaceAll(/\./, '')
    return v.toLong()
}

String version = versionName()
int code = versionNameToCode(version)

setProperty('VERSION_NAME', version)
setProperty('VERSION_CODE', code)

apply from: 'mvn_push.gradle'

apply plugin: 'eclipse'

task gen_eclipse(dependsOn: [
        'cleanEclipseProject', 'cleanEclipseClasspath',
        'eclipseProject', 'eclipseClasspath'])
eclipseProject.mustRunAfter cleanEclipseProject
eclipseClasspath.mustRunAfter cleanEclipseClasspath
